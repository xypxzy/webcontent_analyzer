"""initial migrations

Revision ID: dbfec56c0ad4
Revises: 
Create Date: 2025-02-26 17:00:46.146011

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dbfec56c0ad4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('project',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('active', 'archived', 'deleted', name='project_status'), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('page_limit', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_name'), 'project', ['name'], unique=False)
    op.create_table('page',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('title', sa.String(length=512), nullable=True),
    sa.Column('status', sa.Enum('pending', 'parsing', 'analyzed', 'error', 'optimized', name='page_status'), nullable=False),
    sa.Column('last_parsed_at', sa.DateTime(), nullable=True),
    sa.Column('parse_settings', sa.JSON(), nullable=True),
    sa.Column('page_metadata', sa.JSON(), nullable=True),
    sa.Column('html_content', sa.Text(), nullable=True),
    sa.Column('text_content', sa.Text(), nullable=True),
    sa.Column('structure', sa.JSON(), nullable=True),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_page_url'), 'page', ['url'], unique=False)
    op.create_table('optimizedpage',
    sa.Column('page_id', sa.UUID(), nullable=False),
    sa.Column('html_content', sa.Text(), nullable=False),
    sa.Column('css_content', sa.Text(), nullable=True),
    sa.Column('applied_recommendations', sa.JSON(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'published', 'rejected', name='optimized_page_status'), nullable=False),
    sa.Column('diff', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('page_id')
    )
    op.create_table('pageanalysis',
    sa.Column('page_id', sa.UUID(), nullable=False),
    sa.Column('analyzed_at', sa.DateTime(), nullable=True),
    sa.Column('seo_metrics', sa.JSON(), nullable=True),
    sa.Column('readability_metrics', sa.JSON(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('entities', sa.JSON(), nullable=True),
    sa.Column('sentiment', sa.JSON(), nullable=True),
    sa.Column('topics', sa.JSON(), nullable=True),
    sa.Column('content_quality', sa.JSON(), nullable=True),
    sa.Column('ux_metrics', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'error', name='analysis_status'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('page_id')
    )
    op.create_table('pagerecommendation',
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('category', sa.Enum('seo', 'content', 'structure', 'ux', 'conversion', name='recommendation_category'), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('suggestion', sa.Text(), nullable=True),
    sa.Column('affected_elements', sa.JSON(), nullable=True),
    sa.Column('is_implemented', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['pageanalysis.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pagerecommendation')
    op.drop_table('pageanalysis')
    op.drop_table('optimizedpage')
    op.drop_index(op.f('ix_page_url'), table_name='page')
    op.drop_table('page')
    op.drop_index(op.f('ix_project_name'), table_name='project')
    op.drop_table('project')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
